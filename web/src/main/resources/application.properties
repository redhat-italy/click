quarkus.openshift.build-strategy=docker
quarkus.kubernetes-client.trust-certs=true
quarkus.openshift.route.expose=true

# resteasy clients to backend services (DEV PROFILE)
%dev.quarkus.rest-client.cofis.url=http://localhost:8081/
%dev.quarkus.rest-client.cofis.scope=javax.inject.Singleton
%dev.quarkus.rest-client.cofis.verify-host=false
%dev.quarkus.rest-client.urp.url=http://localhost:8082/
%dev.quarkus.rest-client.urp.scope=javax.inject.Singleton
%dev.quarkus.rest-client.urp.verify-host=false
%dev.quarkus.rest-client.regis.url=http://localhost:8083/
%dev.quarkus.rest-client.regis.scope=javax.inject.Singleton
%dev.quarkus.rest-client.regis.verify-host=false
# resteasy clients to backend services
quarkus.rest-client.cofis.url=http://cofis.click.svc.cluster.local:8080/
quarkus.rest-client.cofis.scope=javax.inject.Singleton
quarkus.rest-client.cofis.verify-host=false
quarkus.rest-client.urp.url=http://urp.click.svc.cluster.local:8080/
quarkus.rest-client.urp.scope=javax.inject.Singleton
quarkus.rest-client.urp.verify-host=false
quarkus.rest-client.regis.url=http://regis.click.svc.cluster.local:8080/
quarkus.rest-client.regis.scope=javax.inject.Singleton
quarkus.rest-client.regis.verify-host=false

# The Kafka broker location
rhosak.client.id=6705b6a1-ef5a-4404-bf33-daa147a0b611
rhosak.client.secret=Swye4OYQBB8oRwixRWVSzEUOD8KZ4OXg

kafka.group.id=demo-mad
kafka.bootstrap.servers=demo-mad-cfpnb-p--lrq-iodrmea.bf2.kafka.rhcloud.com:443
kafka.security.protocol = SASL_SSL
kafka.sasl.mechanism = PLAIN
kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
  username="${rhosak.client.id}" \
  password="${rhosak.client.secret}";

# Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.requests.connector=smallrye-kafka
mp.messaging.outgoing.requests.topic=requests
mp.messaging.outgoing.validRequests.auto.offset.reset=earliest