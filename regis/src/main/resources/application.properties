%dev.quarkus.http.port=8083
quarkus.openshift.build-strategy=docker
quarkus.kubernetes-client.trust-certs=true
quarkus.openshift.route.expose=false

# configure your datasource
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USER}
quarkus.datasource.password=${DB_PASSWORD}
quarkus.datasource.jdbc.url = jdbc:postgresql://${DB_SERVICE}:5432/${DB_NAME}
quarkus.datasource.jdbc.min-size=2
quarkus.datasource.jdbc.max-size=10
%dev.quarkus.datasource.username=${DB_USER}
%dev.quarkus.datasource.password=${DB_PASSWORD}
%dev.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/${DB_NAME}
%dev.quarkus.datasource.jdbc.min-size=1
%dev.quarkus.datasource.jdbc.max-size=2

# Configuring the incoming channel (reading from Kafka)
mp.messaging.incoming.subscriptions.connector=smallrye-kafka
mp.messaging.incoming.subscriptions.topic=subscriptions
mp.messaging.incoming.subscriptions.auto.offset.reset=earliest
mp.messaging.incoming.subscriptions.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.subscriptions.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

rhosak.client.id=6705b6a1-ef5a-4404-bf33-daa147a0b611
rhosak.client.secret=Swye4OYQBB8oRwixRWVSzEUOD8KZ4OXg

kafka.group.id=demo-mad
kafka.bootstrap.servers=demo-mad-cfpnb-p--lrq-iodrmea.bf2.kafka.rhcloud.com:443
kafka.security.protocol = SASL_SSL
kafka.sasl.mechanism = PLAIN
kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
  username="${rhosak.client.id}" \
  password="${rhosak.client.secret}";

# The Kafka broker location for dev profile (defaults to localhost:9092)
%dev.mp.messaging.incoming.subscriptions.connector=smallrye-kafka
%dev.kafka.bootstrap.servers=localhost:9092
%dev.mp.messaging.incoming.subscriptions.topic=subscriptions
%dev.mp.messaging.incoming.subscriptions.auto.offset.reset=earliest
%dev.mp.messaging.incoming.subscriptions.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%dev.mp.messaging.incoming.subscriptions.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
